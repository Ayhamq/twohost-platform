# docker-compose.yml
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ipam}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ipam}
      POSTGRES_DB: ${POSTGRES_DB:-ipam}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ipam} -d ${POSTGRES_DB:-ipam}"]
      interval: 3s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  web:
    build: ./frontend
    environment:
      - NEXT_PUBLIC_API_BASE=http://api:8000   # talks to the api container
    ports:
      - "3000:3000"
    depends_on:
      - api

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  api:
    build: ./backend
    env_file: .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"

  worker:
    build: ./backend
    env_file: .env
    command: celery -A app.worker worker --loglevel=info
    environment:
      - PYTHONPATH=/app
    depends_on:
      - api
      - redis

volumes:
  pgdata:
